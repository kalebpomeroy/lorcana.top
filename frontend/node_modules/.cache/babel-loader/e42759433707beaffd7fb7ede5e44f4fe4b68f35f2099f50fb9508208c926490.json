{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div><h2>Search Instructions</h2><h3>Partial Text Searches</h3><p>Search for partial text in specific fields using the following syntax:</p><ul><li><strong>Name:</strong> <code>n:[text]</code> - Example: <code>n:dragon</code></li><li><strong>Body Text:</strong> <code>b:[text]</code> - Example: <code>b:fire</code></li><li><strong>Artist:</strong> <code>a:[text]</code> - Example: <code>a:smith</code></li><li><strong>Flavor Text:</strong> <code>f:[text]</code> - Example: <code>f:legend</code></li></ul><h3>Integer Searches</h3><p>Perform numeric comparisons using the following operators: <code>:</code>, <code>=</code>, <code>&gt;</code> (greater than), <code>≥</code> (greater than or equal), <code>&lt;</code> (less than), <code>≤</code> (less than or equal).</p><ul><li><strong>Cost:</strong> <code>c:[operator][number]</code> - Example: <code>c:&gt;4</code></li><li><strong>Willpower (HP):</strong> <code>w:[operator][number]</code> - Example: <code>w:≤3</code></li><li><strong>Strength:</strong> <code>s:[operator][number]</code> - Example: <code>s:=5</code></li></ul><h3>Key Letter or Exact Text Matches</h3><p>Search for exact matches or by key letters:</p><ul><li><strong>Ink Color:</strong> <code>i:[letter/text]</code> - Examples: <code>i:g</code>, <code>i:green</code></li><li><strong>Rarity:</strong> <code>r:[letter/text]</code> - Examples: <code>r:r</code>, <code>r:rare</code></li><li><strong>Type:</strong> <code>t:[letter/text]</code> - Examples: <code>t:c</code>, <code>t:creature</code></li></ul><h3>Specific Searches</h3><p>Search for specific attributes:</p><ul><li><strong>Set:</strong> <code>e:[set]</code> - Exact match only. Example: <code>e:XYZ</code></li><li><strong>Inkable:</strong> <code>z:yes</code> or <code>z:no</code> - Search for inkable cards. Example: <code>z:yes</code></li></ul></div>\", 1);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleHelperText && $options.toggleHelperText(...args))\n  }, \"Toggle Helper Text\"), $data.showHelperText ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, [..._hoisted_3])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createStaticVNode","_hoisted_2","_createElementBlock","_createElementVNode","onClick","_cache","args","$options","toggleHelperText","$data","showHelperText","_hoisted_1","_hoisted_3","_createCommentVNode"],"sources":["/home/kpom/workspace/rust/lorcana/frontend/src/components/HelperWindow.vue"],"sourcesContent":["<template>\n    <div>\n      <button @click=\"toggleHelperText\">Toggle Helper Text</button>\n      <p v-if=\"showHelperText\">\n        <div>\n    <h2>Search Instructions</h2>\n\n    <h3>Partial Text Searches</h3>\n    <p>Search for partial text in specific fields using the following syntax:</p>\n    <ul>\n        <li><strong>Name:</strong> <code>n:[text]</code> - Example: <code>n:dragon</code></li>\n        <li><strong>Body Text:</strong> <code>b:[text]</code> - Example: <code>b:fire</code></li>\n        <li><strong>Artist:</strong> <code>a:[text]</code> - Example: <code>a:smith</code></li>\n        <li><strong>Flavor Text:</strong> <code>f:[text]</code> - Example: <code>f:legend</code></li>\n    </ul>\n\n    <h3>Integer Searches</h3>\n    <p>Perform numeric comparisons using the following operators: <code>:</code>, <code>=</code>, <code>&gt;</code> (greater than), <code>&ge;</code> (greater than or equal), <code>&lt;</code> (less than), <code>&le;</code> (less than or equal).</p>\n    <ul>\n        <li><strong>Cost:</strong> <code>c:[operator][number]</code> - Example: <code>c:&gt;4</code></li>\n        <li><strong>Willpower (HP):</strong> <code>w:[operator][number]</code> - Example: <code>w:&le;3</code></li>\n        <li><strong>Strength:</strong> <code>s:[operator][number]</code> - Example: <code>s:=5</code></li>\n    </ul>\n\n    <h3>Key Letter or Exact Text Matches</h3>\n    <p>Search for exact matches or by key letters:</p>\n    <ul>\n        <li><strong>Ink Color:</strong> <code>i:[letter/text]</code> - Examples: <code>i:g</code>, <code>i:green</code></li>\n        <li><strong>Rarity:</strong> <code>r:[letter/text]</code> - Examples: <code>r:r</code>, <code>r:rare</code></li>\n        <li><strong>Type:</strong> <code>t:[letter/text]</code> - Examples: <code>t:c</code>, <code>t:creature</code></li>\n    </ul>\n\n    <h3>Specific Searches</h3>\n    <p>Search for specific attributes:</p>\n    <ul>\n        <li><strong>Set:</strong> <code>e:[set]</code> - Exact match only. Example: <code>e:XYZ</code></li>\n        <li><strong>Inkable:</strong> <code>z:yes</code> or <code>z:no</code> - Search for inkable cards. Example: <code>z:yes</code></li>\n    </ul>\n</div>\n      </p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        showHelperText: false,\n      };\n    },\n    methods: {\n      toggleHelperText() {\n        this.showHelperText = !this.showHelperText;\n      },\n    },\n  };\n  </script>"],"mappings":";;EAAAA,GAAA;AAAA;gCAAAC,kBAAA;oBAIQC,UAkCF,C;;uBArCFC,mBAAA,CAuCM,cAtCJC,mBAAA,CAA6D;IAApDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,oBAAkB,GAC3CG,KAAA,CAAAC,cAAc,I,cAAvBR,mBAAA,CAoCI,KAvCVS,UAAA,MAAAC,UAAA,MAAAC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}